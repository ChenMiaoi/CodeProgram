; 任务：编程运行2^3
; 将abc段和cs段寄存器连接起来
assume cs:abc

; 定义一个段，名称为 abc
abc segment
    ; 输入汇编指令
    mov ax, 2
    add ax, ax
    add ax, ax

    ; 程序返回， 一个程序P在可执行文件中，需要由另一个已经启动的程序M将P从可执行文件中加载进内存
    ; 然后M将CPU的控制权交付给P，P才能够运行，交付完毕之后，M暂停运行，待P执行完毕后再将权限交付回M
    ; 因此，一个程序结束后，将CPU的控制权交还给它得以运行的程序，叫做程序返回
    mov ax, 4c00h
    int 21h
abc ends

end

; 当程序以DEBUG模式进入时，CX寄存器中的值是可执行文件的长度
; 在DOS中，程序加载进内存的步骤：
    ; 1. 找到一段SA：0的起始位置(起始位置的偏移量为0,且空闲的内存空间足够)
    ; 2. 在这段内存区的前2^8字节中，创建一个程序段前缀为PSP的数据区 -> DOS利用PSP来和加载进内存中的程序通信
    ; 3. 在PSP的后面，也就是2^8+1的字节处，载入程序，设置该处为程序的地址(SA+10H)
        ; 此时：
        ;   空闲内存区：SA：0
        ;      PSP区：SA：0
        ;      程序区：SA+10H：0
    ; 4. 将该内存区的段地址写入DS段寄存器中，初始化其他相关寄存器，设置CS：IP指向程序的入口

; 注意：在遇到INT 21指令时，应该使用P指令来执行
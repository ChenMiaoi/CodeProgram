% 问题背景{
    %   3名商人各带1名随从乘船渡河，一只小船只能容纳2人，由他们自己划行。
    %   随从们密约，在河的任一岸，一旦随从人数比商人多，就杀商人。
    %   此密约被商人知道，如何乘船渡河的大权掌握在商人们手中，商人们怎样安排每次乘船方案，才能安全渡河呢？ 
% }
%
% 问题分析{
    %   设第k次渡河前此岸的商人数为Xk，随从数为Yk，k=1,2,…。Xk，Yk=0,1,2,3。
    %   将二维向量Sk=(Xk, Yk)定义为状态。安全渡河条件下的状态集合称为允许状态集合，记为S，则
    %   S={(x,y)|x=0或3,y=0,1,2,3;x=y=1,2}
    %
    %   设第k次渡船上的商人数为Uk，随从数为Vk，将二维向量Dk=(Uk, Vk)定义为决策,则允许决策集合为:
    %   D={(u,v)|u+v=1,2}
    %
    %   如果将第一次过河记为第一次，则可以推断，在有限次中，驶向彼岸是奇数次，因此状态Sk随着决策Dk的变化：
    %   Sk+1 = Sk + ((-1)^k)Dk
    %
    %   故，该问题则变为多步决策问题：
    %   求决策DK∈D（k=1，2，…，n），使SK∈S按照转移律
    %   由初始状态S1=（3，3）经有限步（设为n）到达状态Sn+1=（0，0）
% }

function CrossRiver()
    Status(1, : ) = [3, 3, -1];
    Move = [];
    global ii;
    ii = 1;
    boat(Status, Move);
end

